{"version":3,"sources":["reducers/userReducer.js","reducers/index.js","reducers/posts.js","constants/actionTypes.js","api/index.js","actions/posts.js","components/Posts/Post/Post.js","components/Posts/Posts.js","components/Form/styles.js","components/Form/Form.js","styles.js","components/Login/Login.js","components/Login/Logout.js","App.js","index.js"],"names":["userSlice","createSlice","name","initialState","user","reducers","login","state","action","payload","logout","actions","selectUser","combineReducers","posts","type","map","post","_id","filter","userReducer","url","updatePost","id","updatedPost","axios","patch","deletePost","delete","createPost","dispatch","a","newPost","data","console","log","message","api","Post","setCurrentId","useDispatch","className","creator","moment","createdAt","fromNow","title","onClick","Posts","useSelector","length","Grid","key","CircularProgress","makeStyles","theme","root","margin","spacing","paper","padding","form","display","flexWrap","justifyContent","fileInput","width","buttonSubmit","marginBottom","Form","currentId","useState","tags","selectedFile","postData","setPostData","find","classes","useStyles","useEffect","clear","handleSubmit","e","preventDefault","Paper","autoComplete","noValidate","onSubmit","Typography","variant","TextField","label","fullWidth","value","onChange","target","multiline","rows","Button","color","size","appBar","borderRadius","flexDirection","alignItems","heading","image","marginLeft","Login","setName","email","setEmail","password","setPassword","isLoggedIn","alert","placeholder","Logout","style","cursor","backgroundColor","border","marginTop","handleLogout","App","get","Container","maxWidth","AppBar","position","align","src","alt","height","Grow","in","container","justify","item","xs","sm","store","createStore","compose","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cfbf509f.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nexport const userSlice = createSlice({\r\n  name: \"user\",\r\n  initialState: {\r\n    user: null,\r\n  },\r\n  reducers: {\r\n    login: (state, action) => {\r\n      state.user = action.payload;\r\n    },\r\n    logout: (state) => {\r\n      state.user = null;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { login, logout } = userSlice.actions;\r\n\r\nexport const selectUser = (state) => state.user?.user;\r\n\r\nexport default userSlice.reducer;\r\n","import { combineReducers } from \"redux\";\nimport userReducer from \"./userReducer\";\n\nimport posts from \"./posts\";\n\nexport const reducers = combineReducers({ posts: posts, user: userReducer });\n","import { FETCH_ALL, CREATE, UPDATE, DELETE } from \"../constants/actionTypes\";\n\nexport default (posts = [], action) => {\n  switch (action.type) {\n    case FETCH_ALL:\n      return action.payload;\n    case CREATE:\n      return [...posts, action.payload];\n    case UPDATE:\n      return posts.map((post) =>\n        post._id === action.payload._id ? action.payload : post\n      );\n    case DELETE:\n      return posts.filter((post) => post._id !== action.payload);\n    default:\n      return posts;\n  }\n};\n","export const CREATE = \"CREATE\";\nexport const UPDATE = \"UPDATE\";\nexport const DELETE = \"DELETE\";\nexport const FETCH_ALL = \"FETCH_ALL\";\n","import axios from \"axios\";\n\nconst url = \"https://mentor-expertrons.herokuapp.com/posts\";\n\nexport const fetchPosts = () => axios.get(url);\nexport const createPost = (newPost) => axios.post(url, newPost);\nexport const updatePost = (id, updatedPost) =>\n  axios.patch(`${url}/${id}`, updatedPost);\nexport const deletePost = (id) => axios.delete(`${url}/${id}`);\n","import { FETCH_ALL, CREATE, UPDATE, DELETE } from \"../constants/actionTypes\";\n\nimport * as api from \"../api/index.js\";\n\nexport const getPosts = () => async (dispatch) => {\n  try {\n    const { data } = await api.fetchPosts();\n\n    dispatch({ type: FETCH_ALL, payload: data });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const createPost = (post) => async (dispatch) => {\n  try {\n    const { data } = await api.createPost(post);\n\n    dispatch({ type: CREATE, payload: data });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const updatePost = (id, post) => async (dispatch) => {\n  try {\n    const { data } = await api.updatePost(id, post);\n\n    dispatch({ type: UPDATE, payload: data });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const deletePost = (id) => async (dispatch) => {\n  try {\n    await await api.deletePost(id);\n\n    dispatch({ type: DELETE, payload: id });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n","import React from \"react\";\nimport \"./post.css\";\nimport moment from \"moment\";\nimport { useDispatch } from \"react-redux\";\n\nimport { deletePost } from \"../../../actions/posts\";\n\nconst Post = ({ post, setCurrentId }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <div className=\"card\">\n      <div className=\"card__left\">\n        <div className=\"creator\">\n          <h3>Employee Name: {post.creator}</h3>\n          <h6>{moment(post.createdAt).fromNow()}</h6>\n        </div>\n        <h3 className=\"title\">Task Name: {post.title}</h3>\n\n        <h3 className=\"description\">\n          <span className=\"descMini\">Description:</span> {post.message}\n        </h3>\n      </div>\n\n      <button className=\"updateButton\" onClick={() => setCurrentId(post._id)}>\n        Update\n      </button>\n      <button\n        className=\"deleteButton\"\n        onClick={() => dispatch(deletePost(post._id))}\n      >\n        Delete\n      </button>\n    </div>\n  );\n};\n\nexport default Post;\n","import React from \"react\";\nimport { Grid, CircularProgress } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\n\nimport Post from \"./Post/Post\";\n\nconst Posts = ({ setCurrentId }) => {\n  const posts = useSelector((state) => state.posts);\n\n  return !posts.length ? (\n    <CircularProgress />\n  ) : (\n    <Grid className=\"\">\n      {posts.map((post) => (\n        <Grid key={post._id}>\n          <Post post={post} setCurrentId={setCurrentId} />\n        </Grid>\n      ))}\n    </Grid>\n  );\n};\n\nexport default Posts;\n","\nimport { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n    },\n  },\n  paper: {\n    padding: theme.spacing(2),\n  },\n  form: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n  },\n  fileInput: {\n    width: '97%',\n    margin: '10px 0',\n  },\n  buttonSubmit: {\n    marginBottom: 10,\n  },\n}));\n","import React, { useState, useEffect } from \"react\";\nimport { TextField, Button, Typography, Paper } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport useStyles from \"./styles\";\nimport { createPost, updatePost } from \"../../actions/posts\";\n\nconst Form = ({ currentId, setCurrentId }) => {\n  const [postData, setPostData] = useState({\n    creator: \"\",\n    title: \"\",\n    message: \"\",\n    tags: \"\",\n    selectedFile: \"\",\n  });\n  const post = useSelector((state) =>\n    currentId ? state.posts.find((message) => message._id === currentId) : null\n  );\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  useEffect(() => {\n    if (post) setPostData(post);\n  }, [post]);\n\n  const clear = () => {\n    setCurrentId(0);\n    setPostData({\n      creator: \"\",\n      title: \"\",\n      message: \"\",\n      tags: \"\",\n      selectedFile: \"\",\n    });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (currentId === 0) {\n      dispatch(createPost(postData));\n      clear();\n    } else {\n      dispatch(updatePost(currentId, postData));\n      clear();\n    }\n  };\n\n  return (\n    <Paper className={classes.paper}>\n      <form\n        autoComplete=\"off\"\n        noValidate\n        className={`${classes.root} ${classes.form}`}\n        onSubmit={handleSubmit}\n      >\n        <Typography variant=\"h6\">\n          {currentId ? `Editing \"${post?.title}\"` : \"Assign a new task\"}\n        </Typography>\n        <TextField\n          name=\"creator\"\n          variant=\"outlined\"\n          label=\"Employee Name\"\n          fullWidth\n          value={postData.creator}\n          onChange={(e) =>\n            setPostData({ ...postData, creator: e.target.value })\n          }\n        />\n        <TextField\n          name=\"title\"\n          variant=\"outlined\"\n          label=\"Task Name\"\n          fullWidth\n          value={postData.title}\n          onChange={(e) => setPostData({ ...postData, title: e.target.value })}\n        />\n        <TextField\n          name=\"message\"\n          variant=\"outlined\"\n          label=\"Description\"\n          fullWidth\n          multiline\n          rows={4}\n          value={postData.message}\n          onChange={(e) =>\n            setPostData({ ...postData, message: e.target.value })\n          }\n        />\n\n        <div className={classes.fileInput}></div>\n        <Button\n          className={classes.buttonSubmit}\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"large\"\n          type=\"submit\"\n          fullWidth\n        >\n          Submit\n        </Button>\n        <Button\n          variant=\"contained\"\n          color=\"default\"\n          size=\"small\"\n          onClick={clear}\n          fullWidth\n        >\n          Clear\n        </Button>\n      </form>\n    </Paper>\n  );\n};\n\nexport default Form;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport default makeStyles(() => ({\n  appBar: {\n    borderRadius: 15,\n    margin: \"30px 0\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  heading: {\n    color: \"black\",\n  },\n  image: {\n    marginLeft: \"15px\",\n  },\n}));\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { login } from \"../../reducers/userReducer\";\r\nimport \"./login.css\";\r\n\r\nconst Login = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!name) {\r\n      alert(\"Enter the name\");\r\n    } else if (!email) {\r\n      alert(\"Please Enter Email Id\");\r\n    } else if (!password) {\r\n      alert(\"Please enter the password\");\r\n    } else {\r\n      dispatch(\r\n        login({\r\n          name: name,\r\n          email: email,\r\n          password: password,\r\n          isLoggedIn: true,\r\n        })\r\n      );\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"login\">\r\n      <form action=\"\" className=\"login__form\" onSubmit={(e) => handleSubmit(e)}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Name\"\r\n          onChange={(e) => setName(e.target.value)}\r\n          value={name}\r\n        />\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          value={email}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          name=\"\"\r\n          id=\"\"\r\n          placeholder=\"Password\"\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          value={password}\r\n        />\r\n        <button type=\"submit\">Sumbit</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { logout, selectUser } from \"../../reducers/userReducer\";\r\n\r\nconst Logout = () => {\r\n  const dispatch = useDispatch();\r\n  const handleLogout = (e) => {\r\n    e.preventDefault();\r\n    dispatch(logout());\r\n  };\r\n  const user = useSelector(selectUser);\r\n  return (\r\n    <div className=\"logout\">\r\n      <h1 style={{ color: \"lightgray\" }}>\r\n        Welcome! <span style={{ color: \"white\" }}>{user.name}</span>\r\n      </h1>\r\n      <button\r\n        style={{\r\n          cursor: \"pointer\",\r\n          padding: \"7px 15px\",\r\n          backgroundColor: \"yellow\",\r\n          border: \"none\",\r\n          marginTop: \"5px\",\r\n          display: \"block\",\r\n        }}\r\n        onClick={(e) => handleLogout(e)}\r\n      >\r\n        Logout\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Logout;\r\n","import React, { useState, useEffect } from \"react\";\nimport { Container, AppBar, Typography, Grow, Grid } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport Posts from \"./components/Posts/Posts\";\nimport Form from \"./components/Form/Form\";\nimport { getPosts } from \"./actions/posts\";\nimport useStyles from \"./styles\";\nimport { selectUser } from \"./reducers/userReducer\";\nimport Login from \"./components/Login/Login\";\nimport Logout from \"./components/Login/Logout\";\n\nconst App = () => {\n  const user = useSelector(selectUser);\n  const [currentId, setCurrentId] = useState(0);\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  useEffect(() => {\n    dispatch(getPosts());\n  }, [currentId, dispatch]);\n\n  return (\n    <Container maxWidth=\"lg\">\n      <AppBar className={classes.appBar} position=\"static\" color=\"inherit\">\n        <Typography className={classes.heading} variant=\"h2\" align=\"center\">\n          Mentor App\n        </Typography>\n        <img\n          className={classes.image}\n          src=\"https://www.businessmagazinegainesville.com/wp-content/uploads/2017/06/theimportanceofacareermentor.jpg\"\n          alt=\"icon\"\n          height=\"60\"\n        />\n      </AppBar>\n      <Grow in>\n        {user ? (\n          <Container>\n            <Logout />\n            <Grid\n              container\n              justify=\"space-between\"\n              alignItems=\"stretch\"\n              spacing={3}\n            >\n              <Grid item xs={12} sm={7}>\n                <Posts setCurrentId={setCurrentId} />\n              </Grid>\n              <Grid item xs={12} sm={4}>\n                <Form currentId={currentId} setCurrentId={setCurrentId} />\n              </Grid>\n            </Grid>\n          </Container>\n        ) : (\n          <Login />\n        )}\n      </Grow>\n    </Container>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\n\nimport { reducers } from \"./reducers\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nconst store = createStore(reducers, compose(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}